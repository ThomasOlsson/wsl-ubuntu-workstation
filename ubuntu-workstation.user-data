#cloud-config
# Pure Cloud-Init WSL Ubuntu Setup
# This file handles complete WSL Ubuntu configuration using only cloud-init

# System configuration
locale: en_US.UTF-8
timezone: Europe/Copenhagen

# Create user 'kingo' with proper setup
users:
  - name: kingo
    groups: [adm, dialout, cdrom, floppy, sudo, audio, dip, video, plugdev, netdev]
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    shell: /bin/bash
    lock_passwd: false
    passwd: '$6$rounds=4096$aQ7lKJlAbo3Ed$lKzHJWcLPJgBM7u9vw7VlP6gxN7qHC8d.mVDi2lPmPkv8hZpSGDQyEE9MNqDpB/FiO6P5qgdL5jhZLgLJKuC21'  # Password: kingo
    # Fallback SSH key (direct from Windows)
    ssh_authorized_keys:
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINbCrSqXcKzlv9iZZSnyxZjbk+YCW5ViD121Gnk2iZha thomaso@spysystem.dk"

# Package management
package_update: true
package_upgrade: true

# Install essential packages - minimal set required for dotfiles setup
packages:
  - git
  - curl
  - build-essential # Required for Homebrew
  - procps          # Required for Homebrew  
  - file            # Required for Homebrew
  - yadm            # Dotfiles manager

# System commands to run after package installation
runcmd:
  
  # Set up git configuration for kingo
  - sudo -u kingo git config --global init.defaultBranch main
  - sudo -u kingo git config --global pull.rebase true
  - sudo -u kingo git config --global core.editor "/bin/true"
  
  # Create essential directories
  - sudo -u kingo mkdir -p /home/kingo/.config
  - sudo -u kingo mkdir -p /home/kingo/.local/bin
  - sudo -u kingo mkdir -p /home/kingo/projects
  
  # Copy SSH keys from Windows (automatic setup)
  - sudo -u kingo mkdir -p /home/kingo/.ssh
  - sudo -u kingo cp -r "/mnt/c/Users/Thomas Olsson/.ssh/"* /home/kingo/.ssh/ 2>/dev/null || true
  
  # Set proper SSH key permissions (critical for git operations)
  - sudo -u kingo chmod 700 /home/kingo/.ssh
  - sudo -u kingo find /home/kingo/.ssh -name 'id_*' -not -name '*.pub' -exec chmod 600 {} \;
  - sudo -u kingo find /home/kingo/.ssh -name '*.pub' -exec chmod 644 {} \;
  - sudo -u kingo chmod 644 /home/kingo/.ssh/known_hosts* 2>/dev/null || true
  
  # Add GitHub to known hosts to avoid SSH prompts
  - sudo -u kingo ssh-keyscan -H github.com >> /home/kingo/.ssh/known_hosts
  
  # Clone dotfiles repository with yadm (this will set up everything properly)
  # Use StrictHostKeyChecking=no as backup in case ssh-keyscan didn't work
  - sudo -u kingo bash -c "cd /home/kingo && GIT_SSH_COMMAND='ssh -o StrictHostKeyChecking=no' yadm clone git@github.com:ThomasOlsson/dotfiles-workstation.git"
  
  # Run bootstrap automatically to set up symlinks
  - sudo -u kingo bash -c "cd /home/kingo && yadm bootstrap"
  
  # Move bashrc additions to user home and set up
  - sudo -u kingo cp /tmp/bashrc_additions /home/kingo/.bashrc_additions
  - sudo -u kingo bash -c 'echo "" >> /home/kingo/.bashrc'
  - sudo -u kingo bash -c 'echo "# Cloud-init additions" >> /home/kingo/.bashrc'
  - sudo -u kingo bash -c 'cat /home/kingo/.bashrc_additions >> /home/kingo/.bashrc'
  
  # Core workflow scripts will be installed by your dotfiles bootstrap
  
  # Ensure proper ownership
  - chown -R kingo:kingo /home/kingo

# SSH security configuration
ssh_genkeytypes: [rsa, ecdsa, ed25519]
ssh_deletekeys: true
disable_root: true
ssh_quiet_keygen: true
ssh_pwauth: false  # Disable password authentication completely

# SSH key fingerprint logging (for security)
no_ssh_fingerprints: false
authkey_hash: sha256

# Control SSH key console output for security
ssh:
  emit_keys_to_console: false


# Write configuration files
write_files:
  # WSL configuration - set default user and clean PATH
  - path: /etc/wsl.conf
    content: |
      [user]
      default=kingo
      
      [network]
      generateHosts = true
      generateResolvConf = true
      
      [interop]
      appendWindowsPath = false
    permissions: '0644'
    
  # Minimal bashrc additions for WSL setup
  - path: /tmp/bashrc_additions
    content: |
      # Add local bin to PATH
      if [ -d "$HOME/.local/bin" ]; then
          export PATH="$HOME/.local/bin:$PATH"
      fi
      
      # Homebrew PATH will be configured by your bootstrap script
      
      # Welcome message
      echo "ðŸš€ WSL Ubuntu Workstation ready!"
      echo "Basic setup complete - your dotfiles will handle the rest!"
      echo "User 'kingo' password: kingo (for Homebrew installation)"
      echo ""
      echo "Setup Status:"
      echo "âœ… SSH keys copied from Windows automatically"
      echo "âœ… Dotfiles cloned via yadm automatically"
      echo "âœ… Ready to use - try: yadm status"
      echo ""
      echo "ðŸ’¡ Homebrew installation tips for your bootstrap:"
      echo "- Use NONINTERACTIVE=1 for unattended installation"
      echo "- Prerequisites already installed: build-essential, procps, file"
    permissions: '0644'
    

# Boot commands - run these during system boot
bootcmd:
  # Ensure systemd services are ready
  - systemctl daemon-reload

# Final message
final_message: |
  ðŸŽ‰ WSL Ubuntu Workstation Setup Complete!
  
  âœ… User: kingo (with sudo privileges)
  âœ… Timezone: Europe/Copenhagen  
  âœ… SSH keys configured (GitHub + direct fallback)
  âœ… Git configured with proper defaults
  âœ… Basic system ready for your dotfiles
  
  ðŸš€ Dotfiles should be ready automatically:
  1. YADM clone should have completed during setup
  2. Run 'yadm bootstrap' if needed to complete setup
  3. Your cursor settings should sync across machines
  
  ðŸ’¡ For your bootstrap script:
  - User password is 'kingo' (needed for Homebrew installation)
  - Homebrew prerequisites already installed
  - Use NONINTERACTIVE=1 for unattended Homebrew install
  
  Happy coding! ðŸ”¥
